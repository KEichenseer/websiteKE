getwd()
png("CPR_regression_image.png", height = 4, width = 4, res = 600, units = "in")
change_point <- as.numeric(names(sort(table(CPRs$n_change),decreasing = T)))[1] # mode as the change point
phase_1 <- 1:(change_point-1)
phase_2 <- change_point:n
phase_col <- rep(rgb(0,0.3,1,0.75), n)
phase_col[phase_2] <- rgb(0.9,0.4,0,0.75)

par(mar = c(3.6,3.6,0.3,0.3), las = 1, mgp = c(2.25,0.75,0), cex = 1.35)

reg1_seq <- seq(min(x[phase_1]),max(x[phase_1]),length.out = 100)
reg2_seq <- seq(min(x[phase_2]),max(x[phase_2]),length.out = 100)

CPRm <- CPR$BUGSoutput$mean

reg1 <- CPRm$alpha_1 + CPRm$beta_1*reg1_seq
reg2 <- (CPRm$alpha_1+CPRm$alpha_2) + (CPRm$beta_1+ CPRm$beta_2)*reg2_seq

### Calculate confidence intervals
reg1_025 <- sapply(1:100, function(x) quantile(CPRs$alpha_1 + CPRs$beta_1*reg1_seq[x], probs = 0.025))
reg1_975 <- sapply(1:100, function(x) quantile(CPRs$alpha_1 + CPRs$beta_1*reg1_seq[x], probs = 0.975))
reg2_025 <- sapply(1:100, function(x) quantile(CPRs$alpha_1 + CPRs$alpha_2 + (CPRs$beta_1+CPRs$beta_2)*reg2_seq[x], probs = 0.025))
reg2_975 <- sapply(1:100, function(x) quantile(CPRs$alpha_1 + CPRs$alpha_2 + (CPRs$beta_1+CPRs$beta_2)*reg2_seq[x], probs = 0.975))

plot(x,y, type = "n")
abline(h=0, v=0, lty = 3)

error_polygon <- function(x,en,ep,color) {
  polygon( c(x[1], x, x[length(x)], x[length(x)], rev(x), x[1]),
           c((ep)[1],ep, (ep)[length(ep)], (en)[length(en)], rev(en), (en)[1]),
           border = NA, col = color)
}

error_polygon(reg2_seq,reg2_025,reg2_975,rgb(0.9,0.4,0,0.22))
error_polygon(reg1_seq,reg1_025,reg1_975,rgb(0,0.3,1,0.22))

points(reg1_seq, reg1, type = "l", col = rgb(0,0.3,1) , lwd = 2)
points(reg2_seq, reg2, type = "l", col = rgb(0.9,0.4,0), lwd = 2)
points(x,y, bg = phase_col, pch = 21, cex = 0.9)
legend("topleft", legend = c(expression("before "*italic(n["change"])), expression("after "*italic(n["change"]))), pt.bg  = c(rgb(0,0.3,1), rgb(0.9,0.4,0)), pch = 21,  pt.cex = 1, bty = "n", cex = 0.85)
dev.off()