axis(2,seq(0,0.5,0.1), c("0",as.character(seq(0.1,0.4,0.1)),NA))
text(-11.5,0.39,"target distribution", adj = c(0,.5), cex = 1.1)
error_polygon <- function(x,en,ep,color) {
polygon( c(x[1], x, x[length(x)], x[length(x)], rev(x), x[1]),
c((ep)[1],ep, (ep)[length(ep)], (en)[length(en)], rev(en), (en)[1]),
border = NA, col = color)
}
error_polygon(xd,rep(0,length(xd)),yd,rgb(0,0.35,0.7,0.33))
sd3 <- p1+rnorm(10,0,0.1)
set.seed(2)
par(mfrow=c(2,1),mar = c(0.5,4,0,0), las = 1)
xd <- seq(-12,12,0.01)
yd <- dnorm(xd,-1.5,1)+dnorm(xd,1.5,1)
plot(xd,yd, xlab = "", ylab = "density",type = "n", yaxs = "i", xaxs = "i", ylim = c(0,0.43), xaxt = "n", yaxt = "n")
axis(2,seq(0,0.5,0.1), c("0",as.character(seq(0.1,0.4,0.1)),NA))
text(-11.5,0.39,"target distribution", adj = c(0,.5), cex = 1.1)
error_polygon <- function(x,en,ep,color) {
polygon( c(x[1], x, x[length(x)], x[length(x)], rev(x), x[1]),
c((ep)[1],ep, (ep)[length(ep)], (en)[length(en)], rev(en), (en)[1]),
border = NA, col = color)
}
error_polygon(xd,rep(0,length(xd)),yd,rgb(0,0.35,0.7,0.33))
p1 <- -0.75
sd3 <- p1+rnorm(10,0,0.1)
points(sd3,dnorm(sd3,-1.5,1)+dnorm(sd3,1.5,1), pch = 4, cex = 1.2, lwd = 2, col = rgb(0.9,0.3,0,0.75), xpd = T)
sd2 <- p1+rnorm(10,0,1.5)
points(sd2,dnorm(sd2,-1.5,1)+dnorm(sd2,1.5,1), pch = 4, cex = 1.2, lwd = 2, col = rgb(0.8,0.8,0,0.75), xpd = T)
sd1 <- p1+rnorm(10,0,7)
points(sd1,dnorm(sd1,-1.5,1)+dnorm(sd1,1.5,1), pch = 4, cex = 1.2, lwd = 2, col = rgb(0,0.8,0,0.75), xpd = T)
abline(v= -0.75, lty = 3, lwd = 2)
points(-0.75,dnorm(-0.75,-1.5,1)+dnorm(-0.75,1.5,1), pch = 4, cex = 1.75, lwd = 3, col = rgb(0,0,0,0.67), xpd = T)
legend("topright", as.expression(c("current value",sapply(1:3, function(x) bquote(italic(sigma["proposal"]~"="~.(sigmas[x])))))),
col = c(rgb(0,0,0,0.67),rgb(0,0.8,0,0.75),rgb(0.8,0.8,0,0.75),rgb(0.9,0.3,0,0.75)), border = NA, bty = "n", pch = 4,
pt.cex = c(1.7,1.2,1.2,1.2), pt.lwd = c(3,2,2,2), cex = 0.95)
set.seed(2)
par(mfrow=c(2,1),mar = c(0.5,4,0,0), las = 1)
xd <- seq(-12,12,0.01)
yd <- dnorm(xd,-1.5,1)+dnorm(xd,1.5,1)
plot(xd,yd, xlab = "", ylab = "density",type = "n", yaxs = "i", xaxs = "i", ylim = c(0,0.43), xaxt = "n", yaxt = "n")
axis(2,seq(0,0.5,0.1), c("0",as.character(seq(0.1,0.4,0.1)),NA))
text(-11.5,0.39,"target distribution", adj = c(0,.5), cex = 1.1)
error_polygon <- function(x,en,ep,color) {
polygon( c(x[1], x, x[length(x)], x[length(x)], rev(x), x[1]),
c((ep)[1],ep, (ep)[length(ep)], (en)[length(en)], rev(en), (en)[1]),
border = NA, col = color)
}
error_polygon(xd,rep(0,length(xd)),yd,rgb(0,0.35,0.7,0.33))
p1 <- -0.75
sd3 <- p1+rnorm(10,0,0.1)
points(sd3,dnorm(sd3,-1.5,1)+dnorm(sd3,1.5,1), pch = 4, cex = 1.2, lwd = 2, col = rgb(0.9,0.3,0,0.75), xpd = T)
sd2 <- p1+rnorm(10,0,1.5)
points(sd2,dnorm(sd2,-1.5,1)+dnorm(sd2,1.5,1), pch = 4, cex = 1.2, lwd = 2, col = rgb(0.8,0.8,0,0.75), xpd = T)
sd1 <- p1+rnorm(10,0,7)
points(sd1,dnorm(sd1,-1.5,1)+dnorm(sd1,1.5,1), pch = 4, cex = 1.2, lwd = 2, col = rgb(0,0.8,0,0.75), xpd = T)
abline(v= -0.75, lty = 3, lwd = 2)
points(-0.75,dnorm(-0.75,-1.5,1)+dnorm(-0.75,1.5,1), pch = 4, cex = 1.75, lwd = 3, col = rgb(0,0,0,0.67), xpd = T)
sigmas <- c(7,1.5,0.15)
legend("topright", as.expression(c("current value",sapply(1:3, function(x) bquote(italic(sigma["proposal"]~"="~.(sigmas[x])))))),
col = c(rgb(0,0,0,0.67),rgb(0,0.8,0,0.75),rgb(0.8,0.8,0,0.75),rgb(0.9,0.3,0,0.75)), border = NA, bty = "n", pch = 4,
pt.cex = c(1.7,1.2,1.2,1.2), pt.lwd = c(3,2,2,2), cex = 0.95)
par(mar = c(2,4,0.5,0))
plot(xd,yd, xlab = "", ylab = "density (not to scale)",type = "n", yaxs = "i", xaxs = "i", ylim = c(0,0.43), yaxt = "n")
text(-11.5,0.39,"proposal distributions", adj = c(0,.5), cex = 1.1)
axis(2,seq(0,0.5,0.1), c("0",as.character(seq(0.1,0.4,0.1)),NA))
error_polygon(xd,rep(0,length(xd)),dnorm(xd,p1,7)*3.8,rgb(0,0.8,0,0.275))
error_polygon(xd,rep(0,length(xd)),dnorm(xd,p1,1.5)*1.19,rgb(0.8,0.8,0,0.35))
error_polygon(xd,rep(0,length(xd)),dnorm(xd,p1,0.15)*0.15,rgb(0.9,0.3,0,0.4))
abline(v= -0.75, lty = 3, lwd = 2)
sigmas <- c(7,1.5,0.15)
legend("topright", as.expression(sapply(1:3, function(x) bquote(italic(sigma["proposal"]~"="~.(sigmas[x]))))),
fill = c(rgb(0,0.8,0,0.275),rgb(0.8,0.8,0,0.35),rgb(0.9,0.3,0,0.4)), border = NA, bty = "n")
blogdown::stop_server()
blogdown::serve_site()
set.seed(2)
par(mfrow=c(2,1),mar = c(0.5,4,0,0), las = 1)
xd <- seq(-12,12,0.01)
yd <- dnorm(xd,-1.5,1)+dnorm(xd,1.5,1)
plot(xd,yd, xlab = "", ylab = "density",type = "n", yaxs = "i", xaxs = "i", ylim = c(0,0.43), xaxt = "n", yaxt = "n")
axis(2,seq(0,0.5,0.1), c("0",as.character(seq(0.1,0.4,0.1)),NA))
text(-11.5,0.39,"target distribution", adj = c(0,.5), cex = 1.1)
error_polygon <- function(x,en,ep,color) {
polygon( c(x[1], x, x[length(x)], x[length(x)], rev(x), x[1]),
c((ep)[1],ep, (ep)[length(ep)], (en)[length(en)], rev(en), (en)[1]),
border = NA, col = color)
}
error_polygon(xd,rep(0,length(xd)),yd,rgb(0,0.35,0.7,0.33))
p1 <- -0.75
sd3 <- p1+rnorm(10,0,0.1)
points(sd3,dnorm(sd3,-1.5,1)+dnorm(sd3,1.5,1), pch = 4, cex = 1.2, lwd = 2, col = rgb(0.9,0.3,0,0.75), xpd = T)
sd2 <- p1+rnorm(10,0,2.5)
points(sd2,dnorm(sd2,-1.5,1)+dnorm(sd2,1.5,1), pch = 4, cex = 1.2, lwd = 2, col = rgb(0.8,0.8,0,0.75), xpd = T)
sd1 <- p1+rnorm(10,0,8)
points(sd1,dnorm(sd1,-1.5,1)+dnorm(sd1,1.5,1), pch = 4, cex = 1.2, lwd = 2, col = rgb(0,0.8,0,0.75), xpd = T)
abline(v= -0.75, lty = 3, lwd = 2)
points(-0.75,dnorm(-0.75,-1.5,1)+dnorm(-0.75,1.5,1), pch = 4, cex = 1.75, lwd = 3, col = rgb(0,0,0,0.67), xpd = T)
sigmas <- c(8,2.5,0.15)
legend("topright", as.expression(c("current value",sapply(1:3, function(x) bquote(italic(sigma["proposal"]~"="~.(sigmas[x])))))),
col = c(rgb(0,0,0,0.67),rgb(0,0.8,0,0.75),rgb(0.8,0.8,0,0.75),rgb(0.9,0.3,0,0.75)), border = NA, bty = "n", pch = 4,
pt.cex = c(1.7,1.2,1.2,1.2), pt.lwd = c(3,2,2,2), cex = 0.95)
par(mar = c(2,4,0.5,0))
plot(xd,yd, xlab = "", ylab = "density (not to scale)",type = "n", yaxs = "i", xaxs = "i", ylim = c(0,0.43), yaxt = "n")
text(-11.5,0.39,"proposal distributions", adj = c(0,.5), cex = 1.1)
axis(2,seq(0,0.5,0.1), c("0",as.character(seq(0.1,0.4,0.1)),NA))
error_polygon(xd,rep(0,length(xd)),dnorm(xd,p1,8)*4,rgb(0,0.8,0,0.275))
error_polygon(xd,rep(0,length(xd)),dnorm(xd,p1,2.5)*1.5,rgb(0.8,0.8,0,0.35))
error_polygon(xd,rep(0,length(xd)),dnorm(xd,p1,0.15)*0.15,rgb(0.9,0.3,0,0.4))
abline(v= -0.75, lty = 3, lwd = 2)
sigmas <- c(7,1.5,0.15)
legend("topright", as.expression(sapply(1:3, function(x) bquote(italic(sigma["proposal"]~"="~.(sigmas[x]))))),
fill = c(rgb(0,0.8,0,0.275),rgb(0.8,0.8,0,0.35),rgb(0.9,0.3,0,0.4)), border = NA, bty = "n")
set.seed(2)
par(mfrow=c(2,1),mar = c(0.5,4,0,0), las = 1)
xd <- seq(-12,12,0.01)
yd <- dnorm(xd,-1.5,1)+dnorm(xd,1.5,1)
plot(xd,yd, xlab = "", ylab = "density",type = "n", yaxs = "i", xaxs = "i", ylim = c(0,0.43), xaxt = "n", yaxt = "n")
axis(2,seq(0,0.5,0.1), c("0",as.character(seq(0.1,0.4,0.1)),NA))
text(-11.5,0.39,"target distribution", adj = c(0,.5), cex = 1.1)
error_polygon <- function(x,en,ep,color) {
polygon( c(x[1], x, x[length(x)], x[length(x)], rev(x), x[1]),
c((ep)[1],ep, (ep)[length(ep)], (en)[length(en)], rev(en), (en)[1]),
border = NA, col = color)
}
error_polygon(xd,rep(0,length(xd)),yd,rgb(0,0.35,0.7,0.33))
p1 <- -0.75
sd3 <- p1+rnorm(10,0,0.2)
points(sd3,dnorm(sd3,-1.5,1)+dnorm(sd3,1.5,1), pch = 4, cex = 1.2, lwd = 2, col = rgb(0.9,0.3,0,0.75), xpd = T)
sd2 <- p1+rnorm(10,0,2.5)
points(sd2,dnorm(sd2,-1.5,1)+dnorm(sd2,1.5,1), pch = 4, cex = 1.2, lwd = 2, col = rgb(0.8,0.8,0,0.75), xpd = T)
sd1 <- p1+rnorm(10,0,8)
points(sd1,dnorm(sd1,-1.5,1)+dnorm(sd1,1.5,1), pch = 4, cex = 1.2, lwd = 2, col = rgb(0,0.8,0,0.75), xpd = T)
abline(v= -0.75, lty = 3, lwd = 2)
points(-0.75,dnorm(-0.75,-1.5,1)+dnorm(-0.75,1.5,1), pch = 4, cex = 1.75, lwd = 3, col = rgb(0,0,0,0.67), xpd = T)
sigmas <- c(8,2.5,0.2)
legend("topright", as.expression(c("current value",sapply(1:3, function(x) bquote(italic(sigma["proposal"]~"="~.(sigmas[x])))))),
col = c(rgb(0,0,0,0.67),rgb(0,0.8,0,0.75),rgb(0.8,0.8,0,0.75),rgb(0.9,0.3,0,0.75)), border = NA, bty = "n", pch = 4,
pt.cex = c(1.7,1.2,1.2,1.2), pt.lwd = c(3,2,2,2), cex = 0.95)
par(mar = c(2,4,0.5,0))
plot(xd,yd, xlab = "", ylab = "density (not to scale)",type = "n", yaxs = "i", xaxs = "i", ylim = c(0,0.43), yaxt = "n")
text(-11.5,0.39,"proposal distributions", adj = c(0,.5), cex = 1.1)
axis(2,seq(0,0.5,0.1), c("0",as.character(seq(0.1,0.4,0.1)),NA))
error_polygon(xd,rep(0,length(xd)),dnorm(xd,p1,8)*4,rgb(0,0.8,0,0.275))
error_polygon(xd,rep(0,length(xd)),dnorm(xd,p1,2.5)*1.7,rgb(0.8,0.8,0,0.35))
error_polygon(xd,rep(0,length(xd)),dnorm(xd,p1,0.2)*0.2,rgb(0.9,0.3,0,0.4))
abline(v= -0.75, lty = 3, lwd = 2)
sigmas <- c(7,1.5,0.15)
legend("topright", as.expression(sapply(1:3, function(x) bquote(italic(sigma["proposal"]~"="~.(sigmas[x]))))),
fill = c(rgb(0,0.8,0,0.275),rgb(0.8,0.8,0,0.35),rgb(0.9,0.3,0,0.4)), border = NA, bty = "n")
set.seed(2)
par(mfrow=c(2,1),mar = c(0.5,4,0,0), las = 1)
xd <- seq(-12.2,12.2,0.01)
yd <- dnorm(xd,-1.5,1)+dnorm(xd,1.5,1)
plot(xd,yd, xlab = "", ylab = "density",type = "n", yaxs = "i", xaxs = "i", ylim = c(0,0.43), xaxt = "n", yaxt = "n")
axis(2,seq(0,0.5,0.1), c("0",as.character(seq(0.1,0.4,0.1)),NA))
text(-11.5,0.39,"target distribution", adj = c(0,.5), cex = 1.1)
error_polygon <- function(x,en,ep,color) {
polygon( c(x[1], x, x[length(x)], x[length(x)], rev(x), x[1]),
c((ep)[1],ep, (ep)[length(ep)], (en)[length(en)], rev(en), (en)[1]),
border = NA, col = color)
}
error_polygon(xd,rep(0,length(xd)),yd,rgb(0,0.35,0.7,0.33))
p1 <- -0.75
sd3 <- p1+rnorm(10,0,0.2)
points(sd3,dnorm(sd3,-1.5,1)+dnorm(sd3,1.5,1), pch = 4, cex = 1.2, lwd = 2, col = rgb(0.9,0.3,0,0.75), xpd = T)
sd2 <- p1+rnorm(10,0,2.5)
points(sd2,dnorm(sd2,-1.5,1)+dnorm(sd2,1.5,1), pch = 4, cex = 1.2, lwd = 2, col = rgb(0.8,0.8,0,0.75), xpd = T)
sd1 <- p1+rnorm(10,0,8)
points(sd1,dnorm(sd1,-1.5,1)+dnorm(sd1,1.5,1), pch = 4, cex = 1.2, lwd = 2, col = rgb(0,0.8,0,0.75), xpd = T)
abline(v= -0.75, lty = 3, lwd = 2)
points(-0.75,dnorm(-0.75,-1.5,1)+dnorm(-0.75,1.5,1), pch = 4, cex = 1.75, lwd = 3, col = rgb(0,0,0,0.67), xpd = T)
sigmas <- c(8,2.5,0.2)
legend("topright", as.expression(c("current value",sapply(1:3, function(x) bquote(italic(sigma["proposal"]~"="~.(sigmas[x])))))),
col = c(rgb(0,0,0,0.67),rgb(0,0.8,0,0.75),rgb(0.8,0.8,0,0.75),rgb(0.9,0.3,0,0.75)), border = NA, bty = "n", pch = 4,
pt.cex = c(1.7,1.2,1.2,1.2), pt.lwd = c(3,2,2,2), cex = 0.95)
par(mar = c(2,4,0.5,0))
plot(xd,yd, xlab = "", ylab = "density (not to scale)",type = "n", yaxs = "i", xaxs = "i", ylim = c(0,0.43), yaxt = "n")
text(-11.5,0.39,"proposal distributions", adj = c(0,.5), cex = 1.1)
axis(2,seq(0,0.5,0.1), c("0",as.character(seq(0.1,0.4,0.1)),NA))
error_polygon(xd,rep(0,length(xd)),dnorm(xd,p1,8)*4,rgb(0,0.8,0,0.275))
error_polygon(xd,rep(0,length(xd)),dnorm(xd,p1,2.5)*1.7,rgb(0.8,0.8,0,0.35))
error_polygon(xd,rep(0,length(xd)),dnorm(xd,p1,0.2)*0.2,rgb(0.9,0.3,0,0.4))
abline(v= -0.75, lty = 3, lwd = 2)
legend("topright", as.expression(sapply(1:3, function(x) bquote(italic(sigma["proposal"]~"="~.(sigmas[x]))))),
fill = c(rgb(0,0.8,0,0.275),rgb(0.8,0.8,0,0.35),rgb(0.9,0.3,0,0.4)), border = NA, bty = "n")
set.seed(2)
par(mfrow=c(2,1),mar = c(0.5,4,0,0), las = 1)
xd <- seq(-12.2,12.2,0.01)
yd <- dnorm(xd,-1.5,1)+dnorm(xd,1.5,1)
plot(xd,yd, xlab = "", ylab = "density",type = "n", yaxs = "i", xaxs = "i", ylim = c(0,0.43), xaxt = "n", yaxt = "n")
axis(2,seq(0,0.5,0.1), c("0",as.character(seq(0.1,0.4,0.1)),NA))
text(-11.5,0.39,"target distribution", adj = c(0,.5), cex = 1.1)
error_polygon <- function(x,en,ep,color) {
polygon( c(x[1], x, x[length(x)], x[length(x)], rev(x), x[1]),
c((ep)[1],ep, (ep)[length(ep)], (en)[length(en)], rev(en), (en)[1]),
border = NA, col = color)
}
error_polygon(xd,rep(0,length(xd)),yd,rgb(0,0.35,0.7,0.33))
p1 <- -0.75
sd3 <- p1+rnorm(10,0,0.2)
points(sd3,dnorm(sd3,-1.5,1)+dnorm(sd3,1.5,1), pch = 4, cex = 1.2, lwd = 2, col = rgb(0.9,0.3,0,0.75), xpd = T)
sd2 <- p1+rnorm(10,0,2.5)
points(sd2,dnorm(sd2,-1.5,1)+dnorm(sd2,1.5,1), pch = 4, cex = 1.2, lwd = 2, col = rgb(0.8,0.8,0,0.75), xpd = T)
sd1 <- p1+rnorm(10,0,8)
points(sd1,dnorm(sd1,-1.5,1)+dnorm(sd1,1.5,1), pch = 4, cex = 1.2, lwd = 2, col = rgb(0,0.8,0,0.75), xpd = T)
abline(v= -0.75, lty = 3, lwd = 2)
points(-0.75,dnorm(-0.75,-1.5,1)+dnorm(-0.75,1.5,1), pch = 4, cex = 1.75, lwd = 3, col = rgb(0,0,0,0.67), xpd = T)
sigmas <- c(8,2.5,0.2)
legend("topright", as.expression(c("current value",sapply(1:3, function(x) bquote(italic(sigma["proposal"]~"="~.(sigmas[x])))))),
col = c(rgb(0,0,0,0.67),rgb(0,0.8,0,0.75),rgb(0.8,0.8,0,0.75),rgb(0.9,0.3,0,0.75)), border = NA, bty = "n", pch = 4,
pt.cex = c(1.7,1.2,1.2,1.2), pt.lwd = c(3,2,2,2), cex = 0.95)
par(mar = c(2,4,0.5,0))
plot(xd,yd, xlab = "", ylab = "density (not to scale)",type = "n", yaxs = "i", xaxs = "i", ylim = c(0,0.43), yaxt = "n")
text(-11.5,0.39,"proposal distributions", adj = c(0,.5), cex = 1.1)
axis(2,seq(0,0.5,0.1), c("0",as.character(seq(0.1,0.4,0.1)),NA))
error_polygon(xd,rep(0,length(xd)),dnorm(xd,p1,8)*4,rgb(0,0.8,0,0.275))
error_polygon(xd,rep(0,length(xd)),dnorm(xd,p1,2.5)*1.7,rgb(0.8,0.8,0,0.35))
error_polygon(xd,rep(0,length(xd)),dnorm(xd,p1,0.2)*0.2,rgb(0.9,0.3,0,0.4))
abline(v= -0.75, lty = 3, lwd = 2)
legend("topright", as.expression(sapply(1:3, function(x) bquote(italic(sigma["proposal"]~"="~.(sigmas[x]))))),
fill = c(rgb(0,0.8,0,0.275),rgb(0.8,0.8,0,0.35),rgb(0.9,0.3,0,0.4)), border = NA, bty = "n", cex = 0.955)
1/sqrt(2.38)
1/2.38
1/2.38^2
1/2.4^2
sqrt(1/2.4^2)
######################################################
######################################################
### A Metropolis-Hastings algorithm for Latitudinal
### Temperature Gradients
###
### by Kilian Eichenseer
### February 2022
###
######################################################
######################################################
### FUNCTIONS
gradient <- function(x, coeff, sdy) { # sigma is labelled "sdy"
A = coeff[1]
K = coeff[2]
M = coeff[3]
Q = coeff[4]
nu = coeff[5]
return(A + max(c(K-A,0))/((1+(nu*exp(Q*(x-M))))^(1/nu)) + rnorm(length(x),0,sdy))
}
loglik <- function(x, y,  coeff, sdy) {
A = coeff[1]
K = coeff[2]
M = coeff[3]
Q = coeff[4]
nu = coeff[5]
pred = A + max(c(K-A,0))/((1+(nu*exp(Q*(x-M))))^(1/nu))
return(sum(dnorm(y, mean = pred, sd = sdy, log = TRUE)))
}
logprior <- function(coeff) {
return(sum(c(
dunif(coeff[1], -4, 40, log = TRUE),
dunif(coeff[2], -4, 40, log = TRUE),
dnorm(coeff[3], 45, 10, log = TRUE),
dlnorm(coeff[4], -2.4, 0.1, log = TRUE),
dgamma(coeff[5], 1, 1, log = TRUE))))
}
logposterior <- function(x, y, coeff, sdy){
return (loglik(x, y, coeff, sdy) + logprior(coeff))
}
MH_propose <- function(coeff, proposal_sd){
return(rnorm(5,mean = coeff, sd= c(.5,.5,.5,0.01,0.07)))
}
weighted_var <- function(x, weights, sum_weights) {
sum(weights*((x-sum(weights*x)/sum_weights)^2))/(sum_weights)
}
# Main MCMCM function
run_MCMC <- function(x, y, coeff_inits, sdy_init, nIter, proposal_sd_init = rep(10,5), nAdapt = 10000){
### Initialisation
coefficients = array(dim = c(nIter,5)) # set up array to store coefficients
coefficients[1,] = coeff_inits # initialise coefficients
sdy = rep(NA_real_,nIter) # set up vector to store sdy
sdy[1] = sdy_init # intialise sdy
A_sdy = 3 # parameter for the prior on the inverse gamma distribution of sdy
B_sdy = 0.1 # parameter for the prior on the inverse gamma distribution of sdy
n <- length(y)
shape_sdy <- A_sdy+n/2 # shape parameter for the inverse gamma
sd_it <- 1
coeff_sd <- array(NA_real_,dim = c(nAdapt,5))
coeff_sd[1:2,] <- proposal_sd_init
coeff_diff <- array(NA_real_,dim = c(nAdapt,5))
allWeights <- exp((-(nAdapt-2)):0/500)
accept <- rep(NA,nIter)
### The MCMC loop
for (i in 2:nIter){
## 1. Gibbs step to estimate sdy
sdy[i] = sqrt(1/rgamma(1,shape_sdy,B_sdy+0.5*sum((y-gradient(x,coefficients[i-1,],0))^2)))
## 2. Metropolis-Hastings step to estimate the regression coefficients
proposal = MH_propose(coefficients[i-1,],coeff_sd[sd_it,]) # new proposed values
if(any(proposal[c(4,5)] <= 0)) HR = 0 else # Q and nu need to be >0
# Hasting's ratio of the proposal
HR = exp(logposterior(x = x, y = y, coeff = proposal, sdy = sdy[i]) -
logposterior(x = x, y = y, coeff = coefficients[i-1,], sdy = sdy[i]))
#if(gradient(65, proposal,0) >10) HR = 0
# accept proposal with probability = min(HR,1)
if (runif(1) < HR){
accept[i] <- 1
coefficients[i,] = proposal
# if proposal is rejected, keep the values from the previous iteration
}else{
accept[i] <- 0
coefficients[i,] = coefficients[i-1,]
}
# Adaptation of proposal SD
if(i < nAdapt){
coeff_diff[i,] <- coefficients[i,]-coefficients[i-1,]
if(i>=3) {
weights = allWeights[(nAdapt-i+2):nAdapt-1]
sum_weights = sum(weights)
weighted_var_coeff <- apply(coeff_diff[2:i,], 2, function(f) weighted_var(
f, weights = weights, sum_weights = sum_weights))
coeff_sd[i+1,] <- ifelse(weighted_var_coeff==0,
sqrt(coeff_sd[i,]^2/10),
sqrt(2.4^2 * weighted_var_coeff))
}
sd_it <- i
}
} # end of the MCMC loop
###  Function output
output = list(data.frame(A = coefficients[,1],
K = coefficients[,2],
M = coefficients[,3],
Q = coefficients[,4],
nu = coefficients[,5],
sdy = sdy),
coeff_sd)
return(output)
}
# for plotting the 95 % CI shading
error_polygon <- function(x,en,ep,color) {
polygon( c(x[1], x, x[length(x)], x[length(x)], rev(x), x[1]),
c((ep)[1],ep, (ep)[length(ep)], (en)[length(en)], rev(en), (en)[1]),
border = NA, col = color)
}
### Data creation
set.seed(2)
sample_lat <- runif(10,0,90)
sample_data <- data.frame(
x = sample_lat,
y = gradient(x = sample_lat, coeff = c(-2.2, 28, 39, 0.1, 1.2), sd = 2))
### Analysis
nIter <- 200000
system.time({m <- run_MCMC(x = sample_data$x, y = sample_data$y,
coeff_inits = c(10,20,30,0.4,0.4), sdy_init = 5, nIter = nIter,
nAdapt = 5000)})
matplot(log10(m[[2]]))
# Main MCMCM function
run_MCMC <- function(x, y, coeff_inits, sdy_init, nIter, proposal_sd_init = rep(10,5), nAdapt = 10000){
### Initialisation
coefficients = array(dim = c(nIter,5)) # set up array to store coefficients
coefficients[1,] = coeff_inits # initialise coefficients
sdy = rep(NA_real_,nIter) # set up vector to store sdy
sdy[1] = sdy_init # intialise sdy
A_sdy = 3 # parameter for the prior on the inverse gamma distribution of sdy
B_sdy = 0.1 # parameter for the prior on the inverse gamma distribution of sdy
n <- length(y)
shape_sdy <- A_sdy+n/2 # shape parameter for the inverse gamma
sd_it <- 1
coeff_sd <- array(NA_real_,dim = c(nAdapt,5))
coeff_sd[1:2,] <- proposal_sd_init
coeff_diff <- array(NA_real_,dim = c(nAdapt,5))
allWeights <- exp((-(nAdapt-2)):0/500)
accept <- rep(NA,nIter)
### The MCMC loop
for (i in 2:nIter){
## 1. Gibbs step to estimate sdy
sdy[i] = sqrt(1/rgamma(1,shape_sdy,B_sdy+0.5*sum((y-gradient(x,coefficients[i-1,],0))^2)))
## 2. Metropolis-Hastings step to estimate the regression coefficients
proposal = MH_propose(coefficients[i-1,],coeff_sd[sd_it,]) # new proposed values
if(any(proposal[c(4,5)] <= 0)) HR = 0 else # Q and nu need to be >0
# Hasting's ratio of the proposal
HR = exp(logposterior(x = x, y = y, coeff = proposal, sdy = sdy[i]) -
logposterior(x = x, y = y, coeff = coefficients[i-1,], sdy = sdy[i]))
#if(gradient(65, proposal,0) >10) HR = 0
# accept proposal with probability = min(HR,1)
if (runif(1) < HR){
accept[i] <- 1
coefficients[i,] = proposal
# if proposal is rejected, keep the values from the previous iteration
}else{
accept[i] <- 0
coefficients[i,] = coefficients[i-1,]
}
# Adaptation of proposal SD
if(i < nAdapt){
coeff_diff[i,] <- coefficients[i,]-coefficients[i-1,]
if(i>=3) {
weights = allWeights[(nAdapt-i+2):nAdapt-1]
sum_weights = sum(weights)
weighted_var_coeff <- apply(coeff_diff[2:i,], 2, function(f) weighted_var(
f, weights = weights, sum_weights = sum_weights))
coeff_sd[i+1,] <- ifelse(weighted_var_coeff==0,
sqrt(coeff_sd[i,]^2/10),
sqrt(2.4^2 * weighted_var_coeff))
}
sd_it <- i
}
} # end of the MCMC loop
###  Function output
output = list(data.frame(A = coefficients[,1],
K = coefficients[,2],
M = coefficients[,3],
Q = coefficients[,4],
nu = coefficients[,5],
sdy = sdy),
coeff_sd,
accept)
return(output)
}
# for plotting the 95 % CI shading
error_polygon <- function(x,en,ep,color) {
polygon( c(x[1], x, x[length(x)], x[length(x)], rev(x), x[1]),
c((ep)[1],ep, (ep)[length(ep)], (en)[length(en)], rev(en), (en)[1]),
border = NA, col = color)
}
### Data creation
set.seed(2)
sample_lat <- runif(10,0,90)
sample_data <- data.frame(
x = sample_lat,
y = gradient(x = sample_lat, coeff = c(-2.2, 28, 39, 0.1, 1.2), sd = 2))
### Analysis
nIter <- 200000
system.time({m <- run_MCMC(x = sample_data$x, y = sample_data$y,
coeff_inits = c(10,20,30,0.4,0.4), sdy_init = 5, nIter = nIter,
nAdapt = 5000)})
matplot(log10(m[[2]]))
#matplot(log10(m[[2]]))
table(m[[3]])
#matplot(log10(m[[2]]))
table(m[[3]])/200000
blogdown::stop_server()
blogdown::serve_site()
blogdown::build_site()
set.seed(2)
par(mfrow=c(2,1),mar = c(0.5,4,0,0), las = 1)
xd <- seq(-12.2,12.2,0.01)
yd <- dnorm(xd,-1.5,1)+dnorm(xd,1.5,1)
plot(xd,yd, xlab = "", ylab = "density",type = "n", yaxs = "i", xaxs = "i", ylim = c(0,0.43), xaxt = "n", yaxt = "n")
axis(2,seq(0,0.5,0.1), c("0",as.character(seq(0.1,0.4,0.1)),NA))
text(-11.5,0.39,"target distribution", adj = c(0,.5), cex = 1.1)
error_polygon <- function(x,en,ep,color) {
polygon( c(x[1], x, x[length(x)], x[length(x)], rev(x), x[1]),
c((ep)[1],ep, (ep)[length(ep)], (en)[length(en)], rev(en), (en)[1]),
border = NA, col = color)
}
error_polygon(xd,rep(0,length(xd)),yd,rgb(0,0.35,0.7,0.33))
p1 <- -0.75
sd3 <- p1+rnorm(10,0,0.2)
points(sd3,dnorm(sd3,-1.5,1)+dnorm(sd3,1.5,1), pch = 4, cex = 1.2, lwd = 2, col = rgb(0.9,0.3,0,0.75), xpd = T)
sd2 <- p1+rnorm(10,0,2.5)
points(sd2,dnorm(sd2,-1.5,1)+dnorm(sd2,1.5,1), pch = 4, cex = 1.2, lwd = 2, col = rgb(0.8,0.8,0,0.75), xpd = T)
sd1 <- p1+rnorm(10,0,8)
points(sd1,dnorm(sd1,-1.5,1)+dnorm(sd1,1.5,1), pch = 4, cex = 1.2, lwd = 2, col = rgb(0,0.8,0,0.75), xpd = T)
abline(v= -0.75, lty = 3, lwd = 2)
points(-0.75,dnorm(-0.75,-1.5,1)+dnorm(-0.75,1.5,1), pch = 4, cex = 1.75, lwd = 3, col = rgb(0,0,0,0.67), xpd = T)
sigmas <- c(8,2.5,0.2)
legend("topright", as.expression(c("current value",sapply(1:3, function(x) bquote(italic(sigma["proposal"]~"="~.(sigmas[x])))))),
col = c(rgb(0,0,0,0.67),rgb(0,0.8,0,0.75),rgb(0.8,0.8,0,0.75),rgb(0.9,0.3,0,0.75)), border = NA, bty = "n", pch = 4,
pt.cex = c(1.7,1.2,1.2,1.2), pt.lwd = c(3,2,2,2), cex = 0.95)
par(mar = c(2,4,0.5,0))
plot(xd,yd, xlab = "", ylab = "density (not to scale)",type = "n", yaxs = "i", xaxs = "i", ylim = c(0,0.43), yaxt = "n")
text(-11.5,0.39,"proposal distributions", adj = c(0,.5), cex = 1.1)
axis(2,seq(0,0.5,0.1), c("0",as.character(seq(0.1,0.4,0.1)),NA))
error_polygon(xd,rep(0,length(xd)),dnorm(xd,p1,8)*4,rgb(0,0.8,0,0.275))
error_polygon(xd,rep(0,length(xd)),dnorm(xd,p1,2.5)*1.7,rgb(0.8,0.8,0,0.35))
error_polygon(xd,rep(0,length(xd)),dnorm(xd,p1,0.2)*0.2,rgb(0.9,0.3,0,0.4))
abline(v= -0.75, lty = 3, lwd = 2)
legend("topright", as.expression(sapply(1:3, function(x) bquote(italic(sigma["proposal"]~"="~.(sigmas[x]))))),
fill = c(rgb(0,0.8,0,0.275),rgb(0.8,0.8,0,0.35),rgb(0.9,0.3,0,0.4)), border = NA, bty = "n", cex = 0.95)
set.seed(2)
par(mfrow=c(2,1),mar = c(0.5,4,0,0), las = 1)
xd <- seq(-12.2,12.2,0.01)
yd <- dnorm(xd,-1.5,1)+dnorm(xd,1.5,1)
plot(xd,yd, xlab = "", ylab = "density",type = "n", yaxs = "i", xaxs = "i", ylim = c(0,0.43), xaxt = "n", yaxt = "n")
axis(2,seq(0,0.5,0.1), c("0",as.character(seq(0.1,0.4,0.1)),NA))
text(-11.5,0.39,"target distribution", adj = c(0,.5), cex = 1.1)
error_polygon <- function(x,en,ep,color) {
polygon( c(x[1], x, x[length(x)], x[length(x)], rev(x), x[1]),
c((ep)[1],ep, (ep)[length(ep)], (en)[length(en)], rev(en), (en)[1]),
border = NA, col = color)
}
error_polygon(xd,rep(0,length(xd)),yd,rgb(0,0.35,0.7,0.33))
p1 <- -0.75
sd3 <- p1+rnorm(10,0,0.2)
points(sd3,dnorm(sd3,-1.5,1)+dnorm(sd3,1.5,1), pch = 4, cex = 1.2, lwd = 2, col = rgb(0.9,0.3,0,0.75), xpd = T)
sd2 <- p1+rnorm(10,0,2.5)
points(sd2,dnorm(sd2,-1.5,1)+dnorm(sd2,1.5,1), pch = 4, cex = 1.2, lwd = 2, col = rgb(0.8,0.8,0,0.75), xpd = T)
sd1 <- p1+rnorm(10,0,8)
points(sd1,dnorm(sd1,-1.5,1)+dnorm(sd1,1.5,1), pch = 4, cex = 1.2, lwd = 2, col = rgb(0,0.8,0,0.75), xpd = T)
abline(v= -0.75, lty = 3, lwd = 2)
points(-0.75,dnorm(-0.75,-1.5,1)+dnorm(-0.75,1.5,1), pch = 4, cex = 1.75, lwd = 3, col = rgb(0,0,0,0.67), xpd = T)
sigmas <- c(8,2.5,0.2)
legend("topright", as.expression(c("current value",sapply(1:3, function(x) bquote(italic(sigma["proposal"]~"="~.(sigmas[x])))))),
col = c(rgb(0,0,0,0.67),rgb(0,0.8,0,0.75),rgb(0.8,0.8,0,0.75),rgb(0.9,0.3,0,0.75)), border = NA, bty = "n", pch = 4,
pt.cex = c(1.7,1.2,1.2,1.2), pt.lwd = c(3,2,2,2), cex = 0.95)
par(mar = c(2,4,0.5,0))
plot(xd,yd, xlab = "", ylab = "density (not to scale)",type = "n", yaxs = "i", xaxs = "i", ylim = c(0,0.43), yaxt = "n")
text(-11.5,0.39,"proposal distributions", adj = c(0,.5), cex = 1.1)
axis(2,seq(0,0.5,0.1), c("0",as.character(seq(0.1,0.4,0.1)),NA))
error_polygon(xd,rep(0,length(xd)),dnorm(xd,p1,8)*4,rgb(0,0.8,0,0.275))
error_polygon(xd,rep(0,length(xd)),dnorm(xd,p1,2.5)*1.7,rgb(0.8,0.8,0,0.35))
error_polygon(xd,rep(0,length(xd)),dnorm(xd,p1,0.2)*0.2,rgb(0.9,0.3,0,0.4))
abline(v= -0.75, lty = 3, lwd = 2)
legend("topright", as.expression(sapply(1:3, function(x) bquote(italic(sigma["proposal"]~"="~.(sigmas[x]))))),
fill = c(rgb(0,0.8,0,0.275),rgb(0.8,0.8,0,0.35),rgb(0.9,0.3,0,0.4)), border = NA, bty = "n", cex = 0.95)
blogdown::stop_server()
blogdown::serve_site()
blogdown:::preview_site()
